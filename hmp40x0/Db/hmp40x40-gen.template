record(lsi, "$(P)$(DEV):Id") {
   field (DESC, "HPM's id")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_id $(PORT)")
   field (SIZV, "100")
   field (PINI, "YES")
}

record(lsi, "$(P)$(DEV):SystErr") {
   field (DESC, "HPM system error")
   #field (DTYP, "stream")
   #field (INP, "@hmp40x0.proto get_err $(PORT)")
   field (SIZV, "100")
   #field (PINI, "YES")
   #field (SCAN, "1 second")
}

record(mbbiDirect, "$(P)$(DEV):Chan$(CHAN):Stat") {
   field (DESC, "HPM status register")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_stat($(CHAN)) $(PORT)")
   field (PINI, "YES")
   field (SCAN, "1 second")
   field (FLNK, "fanoutrecChan$(CHAN)")
}


record(fanout,"fanoutrecChan$(CHAN)") {
   field (LNK0,"$(P)$(DEV):Chan$(CHAN):VoltMode.PROC")
   field (LNK1,"$(P)$(DEV):Chan$(CHAN):CurrMode.PROC")
   field (LNK2,"$(P)$(DEV):Chan$(CHAN):TempOver.PROC")
   field (LNK3,"$(P)$(DEV):Chan$(CHAN):OvpTrip.PROC")
   field (LNK4,"$(P)$(DEV):Chan$(CHAN):FuseTrip.PROC")
}

record(bi, "$(P)$(DEV):Chan$(CHAN):VoltMode") {
   field (DESC, "HPM Volt Mode")
   field (INP, "$(P)$(DEV):Chan$(CHAN):Stat.B0")
   field (SCAN, "Passive")
}

record(bi, "$(P)$(DEV):Chan$(CHAN):CurrMode") {
   field (DESC, "HPM Current Mode")
   field (INP, "$(P)$(DEV):Chan$(CHAN):Stat.B1")
   field (SCAN, "Passive")
}

record(bi, "$(P)$(DEV):Chan$(CHAN):TempOver") {
   field (DESC, "HPM Temperature overrange")
   field (INP, "$(P)$(DEV):Chan$(CHAN):Stat.B4")
   field (SCAN, "Passive")
   field (OSV, "MAJOR")
}

record(bi, "$(P)$(DEV):Chan$(CHAN):OvpTrip") {
   field (DESC, "HPM Over voltage protection trip")
   field (INP, "$(P)$(DEV):Chan$(CHAN):Stat.B9")
   field (SCAN, "Passive")
   field (OSV, "MAJOR")
}

record(bi, "$(P)$(DEV):Chan$(CHAN):FuseTrip") {
   field (DESC, "HPM Fuse trip")
   field (INP, "$(P)$(DEV):Chan$(CHAN):Stat.B10")
   field (SCAN, "Passive")
   field (OSV, "MAJOR")
}

record(ai, "$(P)$(DEV):Chan$(CHAN):RdSetVolt") {
   field (DESC, "HPM read set voltage")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_set_val($(CHAN),VOLT) $(PORT)")
   field (EGU, "V")
   field (PINI, "YES")
   field (SCAN, "1 second")
   field (FLNK, "$(P)$(DEV):Chan$(CHAN):RdSetCurr")
}

record(ai, "$(P)$(DEV):Chan$(CHAN):RdMeasVolt") {
   field (DESC, "HPM read meas voltage")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_meas_val($(CHAN),VOLT) $(PORT)")
   field (EGU, "V")
   field (PINI, "YES")
   field (SCAN, "1 second")
   field (FLNK, "$(P)$(DEV):Chan$(CHAN):RdMeasCurr")
}

record(ai, "$(P)$(DEV):Chan$(CHAN):RdSetCurr") {
   field (DESC, "HPM read set current")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_set_val($(CHAN),CURR) $(PORT)")
   field (EGU, "A")
   field (FLNK, "$(P)$(DEV):Chan$(CHAN):CalcSetPow")
}

record(ai, "$(P)$(DEV):Chan$(CHAN):RdMeasCurr") {
   field (DESC, "HPM read meas current")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_meas_val($(CHAN),CURR) $(PORT)")
   field (EGU, "A")
   field (FLNK, "$(P)$(DEV):Chan$(CHAN):CalcMeasPow")
}

record(calc, "$(P)$(DEV):Chan$(CHAN):CalcMeasPow") {
   field (DESC, "HPM calculated power from meas val")
   field (INPA, "$(P)$(DEV):Chan$(CHAN):RdMeasVolt")
   field (INPB, "$(P)$(DEV):Chan$(CHAN):RdMeasCurr")
   field (CALC, "A*B")
   field (EGU, "W")
}

record(calc, "$(P)$(DEV):Chan$(CHAN):CalcSetPow") {
   field (DESC, "HPM calculated power from set values")
   field (INPA, "$(P)$(DEV):Chan$(CHAN):RdSetVolt")
   field (INPB, "$(P)$(DEV):Chan$(CHAN):RdSetCurr")
   field (CALC, "A*B")
   field (EGU, "W")
}

record(ao, "$(P)$(DEV):Chan$(CHAN):SetVolt") {
   field (DESC, "HPM set voltage")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_val($(CHAN),VOLT) $(PORT)")
   field (EGU, "V")
   #field (PINI, "YES")
   #field (SCAN, "1 second")
   #field (FLNK, "$(P)$(DEV):Chan$(CHAN):RdSetCurr")
}

record(ao, "$(P)$(DEV):Chan$(CHAN):SetCurr") {
   field (DESC, "HPM set current")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_val($(CHAN),CURR) $(PORT)")
   field (EGU, "A")
   #field (PINI, "YES")
   #field (SCAN, "1 second")
   #field (FLNK, "$(P)$(DEV):Chan$(CHAN):RdSetCurr")
}

record(bo, "$(P)$(DEV):Chan$(CHAN):cActive") {
   field (DESC, "HPM activate = 1, deactivate = 0")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_active($(CHAN)) $(PORT)")
}

record(bi, "$(P)$(DEV):Chan$(CHAN):sActive") {
   field (DESC, "HPM active = 1, off = 0")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_active($(CHAN)) $(PORT)")
   field (PINI, "YES")
   field (SCAN, "1 second")
}

record(bo, "$(P)$(DEV):cLoc") {
   field (DESC, "HPM set local")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_syst(loc) $(PORT)")
}

record(bo, "$(P)$(DEV):cMix") {
   field (DESC, "HPM set local/remote")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_syst(mix) $(PORT)")
}

record(bo, "$(P)$(DEV):cRem") {
   field (DESC, "HPM set remote")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_syst(rem) $(PORT)")
}

record(bo, "$(P)$(DEV):cRwl") {
   field (DESC, "HPM set remote lock")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_syst(rwl) $(PORT)")
}

record(mbbiDirect, "$(P)$(DEV):ESR"){
   field (DESC, "HPM esr, bit 6 local mode")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_esr $(PORT)")
}

record(bo, "$(P)$(DEV):CLS"){   
   field (DESC, "HMP clear status")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_com(cls) $(PORT)")
}

record(ao, "$(P)$(DEV):ESE"){   
   field (DESC, "HMP event status enable")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_ese $(PORT)")
   field (DRVL, "0")
   field (DRVH, "255")
}

record(bo, "$(P)$(DEV):OPC"){   
   field (DESC, "HMP operation complete")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_com(opc) $(PORT)")
}

record(bo, "$(P)$(DEV):RST"){   
   field (DESC, "HMP reset")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_com(rst) $(PORT)")
}

record(ao, "$(P)$(DEV):SRE"){   
   field (DESC, "")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_sre $(PORT)")
   field (DRVL, "0")
   field (DRVH, "255")
}

record(mbbiDirect, "$(P)$(DEV):STB"){   
   field (DESC, "HPM status byte")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_stb $(PORT)")
}

record(ai, "$(P)$(DEV):TST"){   
   field (DESC, "HPM self test query: > 0, error")
   field (DTYP, "stream")
   field (INP, "@hmp40x0.proto get_tst $(PORT)")
}

record(bo, "$(P)$(DEV):WAI"){   
   field (DESC, "HPM wait to continue")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_com(wai) $(PORT)")
}

record(ao, "$(P)$(DEV):SAV"){   
   field (DESC, "HMP save settings")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_sav $(PORT)")
   field (DRVL, "0")
   field (DRVH, "9")
}

record(ao, "$(P)$(DEV):RCL"){   
   field (DESC, "HMP recall settings")
   field (DTYP, "stream")
   field (OUT, "@hmp40x0.proto set_rcl $(PORT)")
   field (DRVL, "0")
   field (DRVH, "9")
}


